// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id              Int            @id @default(autoincrement())
  name            String?        @db.VarChar(255)
  email           String         @unique @db.VarChar(255)
  profilePicUrl   String?
  githubUrl       String?
  linkedinUrl     String?
  personalSiteUrl String?
  selfIntro       String?
  Student         Student?
  cohort          Cohort?        @relation(fields: [cohortYear], references: [academicYear])
  cohortYear      Int
  Adviser         Adviser?
  Mentor          Mentor?
  Administrator   Administrator?
}

model Cohort {
  startDate    DateTime
  endDate      DateTime
  academicYear Int       @id
  User         User[]
  Project      Project[]
}

model Student {
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int      @id
  project  Project? @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId   Int?
  nusnetId String?  @db.VarChar(40)
  matricNo String?  @db.VarChar(40)
}

model Adviser {
  user     User      @relation(fields: [userId], references: [id])
  userId   Int       @unique
  projects Project[]
}

model Mentor {
  user     User      @relation(fields: [userId], references: [id])
  userId   Int       @unique
  projects Project[]
}

model Project {
  id           Int              @id @default(autoincrement())
  name         String
  students     Student[]
  adviser      Adviser?         @relation(fields: [adviserId], references: [userId])
  adviserId    Int?
  mentor       Mentor?          @relation(fields: [mentorUserId], references: [userId])
  mentorUserId Int?
  achievement  AchievementLevel
  cohort       Cohort           @relation(fields: [cohortYear], references: [academicYear])
  cohortYear   Int
}

enum AchievementLevel {
  Vostok
  Gemini
  Apollo
  Artemis
}

model Administrator {
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @id
  startDate DateTime
  endDate   DateTime
}
